package usothreads;

public class SincronizandoHilos {

	public static void main(String[] args) {

		HilosVarios hilo1 = new HilosVarios("1");
		HilosVarios hilo2 = new HilosVarios("2");
		hilo1.start();
		try {

			hilo1.join();
		} catch (InterruptedException e) {

			e.printStackTrace();
		}
		hilo2.start();
		try {

			hilo2.join();
		} catch (InterruptedException e) {

			e.printStackTrace();
		}
		System.out.println("Terminadas las tareas");
		System.out.println(args);
	}
}

class HilosVarios extends Thread {
	private String h;

	public HilosVarios(String h) {

		this.h = h;
	}

	public void run() {

		for (int i = 0; i < 15; i++) {

			System.out.println("Ejecutando hilo " + h + " " + getName());
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}

class HilosVario2 extends Thread {
	private String h;
	private Thread hilo;

	public HilosVario2(String h, Thread hilo) {

		this.hilo = hilo;
		this.h = h;
	}

	public void run() {

		for (int i = 0; i < 15; i++) {

			System.out.println("Ejecutando hilo " + h + " " + getName());
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}
