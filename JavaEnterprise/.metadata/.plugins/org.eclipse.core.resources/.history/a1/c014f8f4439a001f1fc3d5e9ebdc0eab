package lienzo;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;

import javax.swing.JPanel;
import javax.swing.Timer;

public class LIenzoDibujo extends JPanel {
	private Shape s;

	public LIenzoDibujo() {
		setPreferredSize(new Dimension(500, 500));
		s=new Ellipse2D() {
			
			@Override
			public Rectangle2D getBounds2D() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public void setFrame(double x, double y, double w, double h) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public boolean isEmpty() {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public double getY() {
				// TODO Auto-generated method stub
				return 0;
			}
			
			@Override
			public double getX() {
				// TODO Auto-generated method stub
				return 0;
			}
			
			@Override
			public double getWidth() {
				// TODO Auto-generated method stub
				return 0;
			}
			
			@Override
			public double getHeight() {
				// TODO Auto-generated method stub
				return 0;
			}
		};
		Timer t = new Timer(100, new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {

				AffineTransform tr = new AffineTransform();
				tr.setToScale(1.1, 1.1);

				s = tr.createTransformedShape(s);
				repaint();
			}
		});
		t.start();
	}

	@Override
	protected void paintComponent(Graphics g) {

		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		g2.draw(s);

	}

}
