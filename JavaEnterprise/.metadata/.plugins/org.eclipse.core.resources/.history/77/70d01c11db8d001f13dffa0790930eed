package main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;

import javax.swing.JPanel;
import javax.swing.Timer;

public class Lienzo extends JPanel {

	private static final long serialVersionUID = 165559344073304835L;
	private Timer t;
	private Ellipse2D c;
	private Line2D lineaArriba1, lineaArriba2, lineaDerecha1, lineaDerecha2, lineaAbajo1, lineaAbajo2, lineaIzquierda1,
			lineaIzquierda2, lineaFinal;
	private boolean right, left, up, down;
	private int dx = 0, dy = 0;

	public Lienzo() {
		setPreferredSize(new Dimension(500, 500));
		lineaArriba1 = new Line2D.Double(0, 0, 0, 0);
		lineaArriba2 = new Line2D.Double(0, 0, 0, 0);
		lineaDerecha1 = new Line2D.Double(0, 0, 0, 0);
		lineaDerecha2 = new Line2D.Double(0, 0, 0, 0);
		lineaAbajo1 = new Line2D.Double(0, 0, 0, 0);
		lineaAbajo2 = new Line2D.Double(0, 0, 0, 0);
		lineaIzquierda1 = new Line2D.Double(0, 0, 0, 0);
		lineaIzquierda2 = new Line2D.Double(0, 0, 0, 0);
		lineaFinal = new Line2D.Double(0, 0, 0, 0);
		c = new Ellipse2D.Double(50, 50, 30, 30);
		t = new Timer(30, new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if (right) {
					dx = 5;
					dy = 0;
				} else if (left) {
					dx = -5;
					dy = 0;
				} else if (up) {
					dx = 0;
					dy = -5;
				} else if (down) {
					dx = 0;
					dy = 5;
				}

				double newX = c.getX() + dx;
				double newY = c.getY() + dy;
				Ellipse2D c2 = new Ellipse2D.Double(c.getX(), c.getY(), c.getWidth(), c.getHeight());

				if (!checkCollision(c2)) {
					// Si no hay colisión, actualizar posición
					if (newX + c.getWidth() <= getWidth() && newX >= 0 && newY + c.getHeight() <= getHeight()
							&& newY >= 0) {
						c.setFrame(newX, newY, c.getWidth(), c.getHeight());
					}
				}

				repaint();
			}
		});
		t.start();
		addKeyListener(new KeyListener() {

			@Override
			public void keyTyped(KeyEvent e) {

			}

			@Override
			public void keyReleased(KeyEvent e) {

			}

			@Override
			public void keyPressed(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_RIGHT) {
					right = true;
					left = up = down = false;
				} else if (e.getKeyCode() == KeyEvent.VK_LEFT) {
					left = true;
					right = up = down = false;
				} else if (e.getKeyCode() == KeyEvent.VK_UP) {
					up = true;
					right = left = down = false;
				} else if (e.getKeyCode() == KeyEvent.VK_DOWN) {
					down = true;
					right = left = up = false;
				}

			}
		});
		setFocusable(true);
	}

	private boolean checkCollision(Ellipse2D tempEllipse) {
		Line2D[] lines = { lineaArriba1, lineaArriba2, lineaDerecha1, lineaDerecha2, lineaAbajo1, lineaAbajo2,
				lineaIzquierda1, lineaIzquierda2, lineaFinal };

		double expansión = 10.0;
		tempEllipse = new Ellipse2D.Double(tempEllipse.getX() - expansión, tempEllipse.getY() - expansión,
				tempEllipse.getWidth() + (expansión * 2), tempEllipse.getHeight() + (expansión * 2));

		for (Line2D line : lines) {
			if (line != null && line.intersects(el.getBounds())) {
				el.setFrame(0, 0, 0, 0);
				return true;
			}
		}
		return false;
	}

	@Override
	protected void paintComponent(Graphics g) {

		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		lineaArriba1 = new Line2D.Double(getWidth() / 2 - 25, 100, getWidth() / 2 - 25, getHeight() / 2 - 25);
		lineaArriba2 = new Line2D.Double(getWidth() / 2 + 25, 100, getWidth() / 2 + 25, getHeight() / 2 - 25);
		lineaDerecha1 = new Line2D.Double(100, getHeight() / 2 - 25, getWidth() / 2 - 25, getHeight() / 2 - 25);
		lineaDerecha2 = new Line2D.Double(100, getHeight() / 2 + 25, getWidth() / 2 - 25, getHeight() / 2 + 25);
		lineaAbajo2 = new Line2D.Double(getWidth() / 2 - 25, getHeight() / 2 + 25, getWidth() / 2 - 25,
				getHeight() - 100);
		lineaAbajo1 = new Line2D.Double(getWidth() / 2 + 25, getHeight() / 2 + 25, getWidth() / 2 + 25,
				getHeight() - 100);
		lineaIzquierda1 = new Line2D.Double(getWidth() / 2 + 25, getHeight() / 2 - 25, getWidth() - 100,
				getHeight() / 2 - 25);
		lineaIzquierda2 = new Line2D.Double(getWidth() / 2 + 25, getHeight() / 2 + 25, getWidth() - 100,
				getHeight() / 2 + 25);
		lineaFinal = new Line2D.Double(getWidth() - 100, getHeight() / 2 - 25, getWidth() - 100, getHeight() / 2 + 25);

		g2.draw(lineaArriba1);
		g2.draw(lineaArriba2);
		g2.draw(lineaDerecha1);
		g2.draw(lineaDerecha2);
		g2.draw(lineaAbajo1);
		g2.draw(lineaAbajo2);
		g2.draw(lineaIzquierda1);
		g2.draw(lineaIzquierda2);
		g2.fill(c);
		g2.setColor(Color.red);
		g2.draw(lineaFinal);
	}
}
