package main;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.geom.Ellipse2D;

import javax.swing.JPanel;
import javax.swing.Timer;

public class Lienzo extends JPanel {
	private Timer t;
	private Ellipse2D c;

	public Lienzo() {

		c = new Ellipse2D.Double();
		t = new Timer(100, new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		t.start();
		addKeyListener(new KeyListener() {

			@Override
			public void keyTyped(KeyEvent e) {

			}

			@Override
			public void keyReleased(KeyEvent e) {

			}

			@Override
			public void keyPressed(KeyEvent e) {

			}
		});
		setFocusable(true);
	}

	@Override
	protected void paintComponent(Graphics g) {

		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		 // Obtener el centro del panel
        int centerX = getWidth() / 2;
        int centerY = getHeight() / 2;
        
        // Configurar el color y grosor de línea
        g2.setColor(Color.BLACK);
        g2.setStroke(new BasicStroke(2));
        
        // Dibujar las líneas horizontales (4 líneas)
        for (int i = -2; i <= 1; i++) {
            g2.drawLine(0, centerY + (i * 50), getWidth(), centerY + (i * 50));
        }
        
        // Dibujar las líneas verticales (4 líneas)
        for (int i = -2; i <= 1; i++) {
            g2.drawLine(centerX + (i * 50), 0, centerX + (i * 50), getHeight());
        }
	}
}
