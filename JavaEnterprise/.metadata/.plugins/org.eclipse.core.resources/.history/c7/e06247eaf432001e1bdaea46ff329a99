package usothreads;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class UsoThreads {

	public static void main(String[] args) {

		JFrame marco = new MarcoRebote();
		marco.setVisible(true);
	}

}
class PelotaHilos implements Runnable{

	public PelotaHilos(Pelota unaPelota, ) {

		
	}
	public void run() {

		
	}	
}

class Pelota {
	private double x = 0, y = 0, dx = 1, dy = 1;
	private static final int TAMX = 15, TAMY = 15;

	public void muevePelota(Rectangle2D limites) {

		x += dx;
		y += dy;
		if (x < limites.getMinX()) {

			x = limites.getMinX();
			dx = -dx;
		}
		if (x + TAMX >= limites.getMaxX()) {

			x = limites.getMaxX() - TAMX;
			dx = -dx;
		}
		if (y < limites.getMinY()) {

			y = limites.getMinY();
			dy = -dy;
		}
		if (y + TAMY >= limites.getMaxY()) {

			y = limites.getMaxY() - TAMY;
			dy = -dy;
		}
	}

	public Ellipse2D getshape() {

		return new Ellipse2D.Double(x, y, TAMX, TAMY);
	}
}

class LaminaPelota extends JPanel {
	private ArrayList<Pelota> pelotas = new ArrayList<Pelota>();

	public void add(Pelota b) {

		pelotas.add(b);
	}

	public void paitComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		for (Pelota b : pelotas) {

			g2.fill(b.getshape());
		}
	}
}

class MarcoRebote extends JFrame {
	private LaminaPelota lamina;

	public MarcoRebote() {

		setBounds(600, 300, 400, 350);
		setTitle("Rebotes");
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		lamina = new LaminaPelota();
		add(lamina, BorderLayout.CENTER);
		JPanel laminaBotones = new JPanel();
		ponerBoton(laminaBotones, "Dale!", new ActionListener() {

			public void actionPerformed(ActionEvent e) {

				comienzaElJuego();
			}
		});
		ponerBoton(laminaBotones, "Salir", new ActionListener() {

			public void actionPerformed(ActionEvent e) {

				System.exit(0);
			}
		});
		add(laminaBotones, BorderLayout.SOUTH);
	}

	public void ponerBoton(Container c, String titulo, ActionListener oyente) {

		JButton boton = new JButton(titulo);
		c.add(boton);
		boton.addActionListener(oyente);
	}

	public void comienzaElJuego() {

		Pelota pelota = new Pelota();
		lamina.add(pelota);
		for (int i = 1; i < 3000; i++) {

			pelota.muevePelota(lamina.getBounds());
			lamina.paint(lamina.getGraphics());
			try {
				Thread.sleep(4);
			} catch (InterruptedException e) {

				e.printStackTrace();
			}
		}
	}
}